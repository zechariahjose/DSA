#include <stdio.h>
#include <stdlib.h>
#define MAX 5

typedef struct {
    int arr[MAX];
    int front, rear, count;
} Queue;

// Initialize
void init(Queue *q) {
    q->front = 0;
    q->rear = -1;
    q->count = 0;
}

// Check empty
int isEmpty(Queue *q) {
    return q->count == 0;
}

// Check full
int isFull(Queue *q) {
    return q->count == MAX;
}

// Enqueue
void enqueue(Queue *q, int val) {
    if (isFull(q)) {
        printf("Queue Overflow!\n");
        return;
    }
    q->rear = (q->rear + 1) % MAX;
    q->arr[q->rear] = val;
    q->count++;
}

// Dequeue
int dequeue(Queue *q) {
    if (isEmpty(q)) {
        printf("Queue Underflow!\n");
        return -1;
    }
    int val = q->arr[q->front];
    q->front = (q->front + 1) % MAX;
    q->count--;
    return val;
}

// Peek
int peek(Queue *q) {
    return isEmpty(q) ? -1 : q->arr[q->front];
}

int main() {
    Queue q;
    init(&q);

    enqueue(&q, 1);
    enqueue(&q, 2);
    enqueue(&q, 3);

    printf("Front: %d\n", peek(&q));
    printf("Dequeued: %d\n", dequeue(&q));
    printf("Dequeued: %d\n", dequeue(&q));
}
